car park
1.课程设计说明
30车位  1入口  1收费  1出口
工作日仅限员工，周末公众开放
员工需注册，任意天可用，出入刷员工卡，每天1英镑，每月账单从薪水中扣除。
公众周末、公共假日、大学假期可用。按时收费，入口申请临时卡，出口前收费，途径自动收费站，只接受50分、1英镑和2英镑，不找零。0~2小时50分，2~4小时1英镑，4~8小时2英镑，8~12小时3英镑，12~24小时5英镑。
系统需求：
·注册员工车辆。
·员工刷员工卡时，或公众申请临时卡时，入口开放。
·停车场满时不开放。
·员工刷员工卡时，或公众申请临时卡时，出口开放。
·根据临时卡计算消费。
·每月向员工邮寄账单。
·显示停车场使用情况。
·显示收费表和开放时间。
·记录维护：现金、剩余临时票
·便于使用。
注意软件复用性以及向后兼容性。
任何问题问负责人。并在报告中记录。
任意实现，但不要过度实现。

2.敏捷项目管理
6人协同，没人负责不同侧面。

3.第一提交：需求
用QMPlus上的模板，任意应对需求
提交excel文档。

4.第二提交：最终报告和软件
包含：
4.1责任概要和成就(看模板)
4.2项目管理：
·技术，计划，评估，讨论，改进。
·照片
4.3需求：
·根据需求寻找技术。
·软件原形(可手绘)。
·描述第一提交之后的每一次更改。
·故事的迭代和评估。
4.4分析设计：
·类图。
·注意应对需求并保证系统组件复用性。提供原因说明你的目标并展示你的设计的适应性。讨论软件设计。
·讨论所选择的设计模式和应对未来改变的设计模式。
4.5实现和测试
·Java语言写的系统，提供简单GUI显示主要控制、出入口收费站(如图)。
·只需考虑入口、出口、收费数据流。比如用输入框输入卡号(或文件)
·讨论所用的测试策略和技术
·讨论TDD
·Junit测试代码
·所有代码(程序和测试)粘贴到报告中
4.6所有报告应包含介绍，结论和参考列表。
4.7主界面截图(JPEG格式)

5.提交详情
·开发事项(Excel格式)
·最终报告(PDF格式，最多25页，包括附录)
·软件(ZIP打包)包含.java文件，javadocs和Readme文件。
每组只交一个Excel文件，一个PDF文件和一个ZIP文件，组长认真检查。
提前提交，不要等到最后一秒。
所有代码必须在命令行下运行，不能使用其他安装软件。

6.重要提醒
尽管真正的系统需要很多高级功能，但那些远离软件开发能力。
·独立计算机上运行开发，有简单GUI(AWT,Swing)，J2SE 1.5以上版本。
·不需要网络编程，禁止任何网络技术。
·不需要数据库，禁用任何数据库连接。可以用文件。
·代码可维护，可扩展，包含Javadocs和注释。
·代码移交。Readme文件写明如何安装、编译和运行。只可以通过命令行，禁止其他软件和Java库。
·报告关键点
评分在于质量，而不是数量。对于结论的深刻认识，指明如何改进迭代。不需要大量时间做GUI。
·参与和成果。如果任何会议或工作都不参与，个人的10分会没有。

7.评分
满分100
小组90分
·用敏捷技术定义系统需求的能力30%
·分析改进需求设计高质量软件的能力30%
·符合设计的Java代码20%
·Junit测试10%
·项目管理5%
·质量报告5%
个人10分
·详细描述个人成果
·组内参与

请用QMPlus上的messageboard交流。